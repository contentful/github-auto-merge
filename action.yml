name: "Dependabot auto-merge 2.0"

description: "Approves and merges Dependabot PRs"

inputs:
  VAULT_URL:
    description: "Vault URL"
    required: true
runs:
  using: "composite"
  steps:
    - name: Retrieve Github Token
      id: vault
      uses: hashicorp/vault-action@v2.4.3
      with:
        url: ${{ inputs.VAULT_URL }}
        role: ${{ github.event.repository.name }}-github-action
        method: jwt
        path: github-actions
        exportEnv: false
        secrets: |
          github/token/${{ github.event.repository.name }}-dependabot token | GITHUB_MERGE_TOKEN ;
    - name: approve PR
      uses: actions/github-script@v6.3.3
      with:
        script: |
          const opts = github.rest.pulls.listReviews.endpoint.merge({
            pull_number: context.payload.pull_request.number,
            owner: context.payload.repository.owner.login,
            repo: context.payload.repository.name,
          });

          // TODO: Check if auto-merge is enabled
          github.rest.pulls.createReview({
            owner: context.payload.repository.owner.login,
            repo: context.payload.repository.name,
            pull_number: context.payload.pull_request.number,
            event: 'APPROVE',
            body: ''
          })

          const repo = await github.rest.repos.get({
            owner: context.payload.repository.owner.login,
            repo: context.payload.repository.name,
          });

          console.log(repo)

          const methods = {
            SQUASH: repo.allow_squash_merge,
            MERGE: repo.allow_merge_commit,
            REBASE: repo.allow_rebase_merge,
          };

          console.log(methods)

          const allowedMethods = Object.entries(methods)
            .filter(([_, allowed]) => allowed)
            .map(([method]) => method);

          // just pick the first one
          const method = allowedMethods[0];

          if (!method) {
            throw new Error("No allowed merge method found");
          }

          await github.graphql(
            "mutation EnableAutoMerge($input: EnablePullRequestAutoMergeInput!) { enablePullRequestAutoMerge(input: $input) { pullRequest { state } } }",
            {
              input: {
                pullRequestId: context.payload.pull_request.node_id,
                mergeMethod: method,
              },
            }
          );

        github-token: ${{ steps.vault.outputs.GITHUB_MERGE_TOKEN }}
