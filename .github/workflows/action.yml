name: "Dependabot auto-merge"
# description: "Approves and merges Dependabot PRs"

on: pull_request_target # TODO remove this

permissions:
  contents: write
  id-token: write
# inputs:
#   github_token:
#     description: "GitHub token used for commenting on and approving PR"
#     required: true
jobs:
  worker: 
    runs-on: ubuntu-latest
    steps:
      - name: approve-and-request-merge
        uses: actions/github-script@v5.0.0
        with:
          script: |
            const opts = github.rest.pulls.listReviews.endpoint.merge({
              pull_number: context.payload.pull_request.number,
              owner: context.payload.repository.owner.login,
              repo: context.payload.repository.name,
            });
            const reviews = await github.paginate(opts);
            const ourReview = reviews.find(
              (review) =>
                review.state === "APPROVED" && review.user.login === "contentful-automation[bot]"
            );
            if (ourReview) {
              console.log(
                `The user "${ourReview.user.login}" has already approved and requested this PR is merged, exiting`
              );
              return;
            }
            github.rest.pulls.createReview({
              owner: context.payload.repository.owner.login,
              repo: context.payload.repository.name,
              pull_number: context.payload.pull_request.number,
              event: 'APPROVE',
              body: ''
            })

          github-token: "ghs_If7kosVpV0OUHuB1jWjSyfi8U8iPW50Y0l19" # ${{ inputs.github_token }}
      - uses: octokit/graphql-action@v2.x
        id: gql_query
        with:
          query: |
            mutation enableAutoMerge($pr:ID!) {
              enablePullRequestAutoMerge(input:{pullRequestId:$prId}){
                clientMutationId
              }
            }
          pr: ${{ github.event.pull_request.number }}
        env:
          GITHUB_TOKEN: ghs_If7kosVpV0OUHuB1jWjSyfi8U8iPW50Y0l19
      - run: "echo 'gql_query: ${{ steps.gql_query.outputs.data }}'"
            # GITHUB_TOKEN: ${{ inputs.github_token }}
          