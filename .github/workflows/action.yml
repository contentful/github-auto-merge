name: "Dependabot auto-merge"
# description: "Approves and merges Dependabot PRs"

on: pull_request_target # TODO remove this

# inputs:
#   github_token:
#     description: "GitHub token used for commenting on and approving PR"
#     required: true
jobs:
  worker: 
    permissions:
      contents: write
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - run: 'echo "GITHUB_CONTEXT: $GITHUB_CONTEXT"'
        env: 
          GITHUB_CONTEXT: ${{ toJSON(github) }}
      - name: Retrieve Github Token
        id: vault
        uses: hashicorp/vault-action@v2.4.1
        with:
          url: ${{ secrets.VAULT_URL }}
          role: testing-auto-merge-github-action
          method: jwt
          path: github-actions
          exportEnv: false
          secrets: |
            github/token/testing-auto-merge-github-action token | GITHUB_MERGE_TOKEN ;
      - name: approve-and-request-merge
        uses: actions/github-script@v5.0.0
        with:
          script: |
            const opts = github.rest.pulls.listReviews.endpoint.merge({
              pull_number: context.payload.pull_request.number,
              owner: context.payload.repository.owner.login,
              repo: context.payload.repository.name,
            });
            const reviews = await github.paginate(opts);
            const ourReview = reviews.find(
              (review) =>
                review.state === "APPROVED" && review.user.login === "contentful-automation[bot]"
            );
            if (ourReview) {
              console.log(
                `The user "${ourReview.user.login}" has already approved and requested this PR is merged, exiting`
              );
              return;
            }
            github.rest.pulls.createReview({
              owner: context.payload.repository.owner.login,
              repo: context.payload.repository.name,
              pull_number: context.payload.pull_request.number,
              event: 'APPROVE',
              body: ''
            })

          github-token: ${{ steps.vault.outputs.GITHUB_MERGE_TOKEN }} # ${{ inputs.github_token }}

      - run: gh pr merge -ds --auto ${{ github.event.pull_request.html_url }}
        env:
          GITHUB_TOKEN: ${{ steps.vault.outputs.GITHUB_MERGE_TOKEN }}
      # - uses: octokit/graphql-action@v2.x
      #   id: gql_query
      #   with:
      #     query: |
      #       mutation enableAutoMerge($pr:ID!) {
      #         enablePullRequestAutoMerge(input:{pullRequestId:$pr}){
      #           clientMutationId
      #         }
      #       }
      #     pr: ${{ github.event.pull_request.node_id }}
      #   env:
      #     GITHUB_TOKEN: ${{ steps.vault.outputs.GITHUB_MERGE_TOKEN }}
      # - run: "echo 'gql_query: ${{ steps.gql_query.outputs.data }}'"
            # GITHUB_TOKEN: ${{ inputs.github_token }}
          